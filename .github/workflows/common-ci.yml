# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: main CI

on:
  # pull_request:
  #   branches: [master]
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      # MySQL 데몬을 띄웁니다.
      # service container를 쓸 수도 있습니다.
      # - name: Setup MySQL
      #   uses: mirromutth/mysql-action@v1.1
      #   with:
      #     host port: 3306
      #     container port: 3306
      #     mysql version: '8.0'
      #     mysql database: test_db
      #     mysql user: 'test'
      #     mysql password: 'test1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: checkout master
        uses: actions/checkout@v2
      - name: setup docker MySQL
        run: docker-compose up -d
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install modules
        run: yarn
      - name: Set up Prisma migration and generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
        run: |
          yarn migrate
          yarn generate
          yarn seed
      - name: test
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: npm test
